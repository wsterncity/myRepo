#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0) uniform sampler2D depthTexture;
layout(binding = 1, rgba32f) uniform image2D hzbTexture;

void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    vec2 texelSize = vec2(1.0) / imageSize(hzbTexture).xy;

    // 采样四个像素
    float d0 = texelFetch(depthTexture, texelCoord * 2, 0).r;
    float d1 = texelFetch(depthTexture, texelCoord * 2 + ivec2(1, 0), 0).r;
    float d2 = texelFetch(depthTexture, texelCoord * 2 + ivec2(0, 1), 0).r;
    float d3 = texelFetch(depthTexture, texelCoord * 2 + ivec2(1, 1), 0).r;

    // 计算最小深度值
    float minDepth = min(min(d0, d1), min(d2, d3));

    // 存储结果到当前mip层
    imageStore(hzbTexture, texelCoord, vec4(minDepth));
}
